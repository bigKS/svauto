heat_template_version: 2013-05-23

description: >

  HOT template to create Sandvine Stack, it have an Instance acting as a L2 Bridge between two VXLAN networks.

  We have 3 Instances:

  * SVPTS - CentOS 7
  * SVSDE - CentOS 7
  * SVSPB - CentOS 6

  We want to wire them as:

      ---|control_subnet|-------- Control Network (with Internet access via router_i0)
      |        |        |
     ---      ---      ---
     | |      | |      | |      --|Android|     --|Windows|
     | |      | |      | |      |               |
     | |      | |      | |    --------------------------
     | |      | |      | |----|data_real_subnet1 + dhcp|---|CentOS|
     |S|      |S|      |S|    --------------------------
     |V|      |V|      |V|     |            |      |
     |S|      |S|      |P|     |            |      --|Mac|
     |P|      |D|      |T|     --|Ubuntu|   |
     |B|      |E|      |S|                  --|Debian|
     | |      | |      | |
     | |      | |      | |
     | |      | |      | |------------|data_int_subnet1|----|Internet via router_i1|
     | |      | |      | |
     ---      ---      - -
      |        |        |
      --|service_subnet|------ Service Network (not routed - no gateway)

parameters:
  ssh_key:
    type: string
    label: "Your SSH keypair name (pre-create please!)"
    description: |
        If you have not created your key, please go to
        Project/Compute/Access & Security, and either import
        one or create one. If you create it, make sure you keep
        the downloaded file (as you don't get a second chance)
    default: default

  public_network:
    type: string
    label: Public External Network
    description: Public Network with Floating IP addresses
    default: "ext-net"

  svpts_image:
    type: string
    label: "SVPTS Image (default '{{svpts_image}}')"
    description: "SVPTS Image"
    default: "{{svpts_image}}"

  svsde_image:
    type: string
    label: "SVSDE Image (default '{{svsde_image}}')"
    description: "SVSDE Image"
    default: "{{svsde_image}}"

  svspb_image:
    type: string
    label: "SVSPB Image (default '{{svspb_image}}')"
    description: "SVSPB Image"
    default: "{{svspb_image}}"

resources:

  # Neutron L3 Router
  router0:
    type: OS::Neutron::Router
    properties:
      admin_state_up: True
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-router-0' } }
      external_gateway_info:
        network: { get_param: public_network }

  router0_i0:
    type: OS::Neutron::RouterInterface
    properties:
      router: { get_resource: router0 }
      subnet: { get_resource: control_subnet }

  router0_i1:
    type: OS::Neutron::RouterInterface
    properties:
      router: { get_resource: router0 }
      subnet: { get_resource: data_int_subnet1 }

  # Security Groups
  subscriber_default_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-subscriber-default-sec' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - protocol: tcp
          port_range_min: 443
          port_range_max: 443
        - protocol: tcp
          port_range_min: 3389
          port_range_max: 3389

  svsde_ctrl_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svsde-ctrl-rules' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - protocol: tcp
          port_range_min: 443
          port_range_max: 443

  svsde_srvc_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svsde-srvc-rules' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 1
          port_range_max: 65535
        - protocol: udp
          port_range_min: 1
          port_range_max: 65535

  svspb_ctrl_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svspb-ctrl-rules' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22

  svspb_srvc_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svspb-srvc-rules' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 1
          port_range_max: 65535
        - protocol: udp
          port_range_min: 1
          port_range_max: 65535

  svpts_ctrl_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svpts-ctrl-rules' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22

  svpts_srvc_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svpts-srvc-rules' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 1
          port_range_max: 65535
        - protocol: udp
          port_range_min: 1
          port_range_max: 65535

  # Neutron Networks
  control_net:
    type: OS::Neutron::Net
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-control' } }

  control_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-control' } }
      dns_nameservers: [8.8.4.4, 8.8.8.8]
      network: { get_resource: control_net }
      enable_dhcp: True
      cidr: 192.168.192.0/25

  service_net:
    type: OS::Neutron::Net
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-service' } }

  service_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-service' } }
      network: { get_resource: service_net }
      enable_dhcp: True
      cidr: 192.168.192.128/25
      gateway_ip: ""

  data_sub_net1:
    type: OS::Neutron::Net
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-subscribers-ns1' } }

  data_real_subnet1:
    type: OS::Neutron::Subnet
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-subscribers-ss1' } }
      dns_nameservers: [8.8.4.4, 8.8.8.8]
      network: { get_resource: data_sub_net1 }
      enable_dhcp: True
      cidr: 10.192.0.0/16
      gateway_ip: 10.192.0.1
      allocation_pools:
        - start: 10.192.0.50
          end: 10.192.255.254

  data_int_net1:
    type: OS::Neutron::Net
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-subscribers-ni1' } }

  data_int_subnet1:
    type: OS::Neutron::Subnet
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-subscribers-si1' } }
      network: { get_resource: data_int_net1 }
      enable_dhcp: True
      cidr: 10.192.0.0/16
      allocation_pools:
        - start: 10.192.0.2
          end: 10.192.0.49

  # Neutron Ports
  svspb_ctrl_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svspb-port"]]}
      network: { get_resource: control_net }
      security_groups:
        - { get_resource: svspb_ctrl_sec }

  svsde_ctrl_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svsde-port"]]}
      network: { get_resource: control_net }
      security_groups:
        - { get_resource: svsde_ctrl_sec }

  svpts_ctrl_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svpts-port"]]}
      network: { get_resource: control_net }
      security_groups:
        - { get_resource: svpts_ctrl_sec }

  svspb_srvc_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svspb-port"]]}
      network: { get_resource: service_net }

  svsde_srvc_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svsde-port"]]}
      network: { get_resource: service_net }
 
  svpts_srvc_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svpts-port"]]}
      network: { get_resource: service_net }

  svpts_port_int_net1:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svpts-i1-port"]]}
      network: { get_resource: data_int_net1 }
      port_security_enabled: False

  svpts_port_sub_net1:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svpts-s1-port"]]}
      network: { get_resource: data_sub_net1 }
      port_security_enabled: False

  # Instances / Virtual Machines
  svpts_1:
    type: OS::Nova::Server
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svpts-1' } }
      key_name: { get_param: 'ssh_key' }
      image: { get_param: 'svpts_image' }
      flavor: "m1.small"
      networks:
        - port: { get_resource: svpts_ctrl_port }
        - port: { get_resource: svpts_srvc_port }
        - port: { get_resource: svpts_port_sub_net1 }
        - port: { get_resource: svpts_port_int_net1 }
      user_data_format: RAW
      user_data: |
        #cloud-config
        system_info:
          default_user:
            name: "sandvine"
        chpasswd:
          list: |
            root:sandvine
            sandvine:sandvine
          expire: False

  svspb_1:
    type: OS::Nova::Server
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svspb-1' } }
      key_name: { get_param: 'ssh_key' }
      image: { get_param: 'svspb_image' }
      flavor: "m1.medium"
      networks:
        - port: { get_resource: svspb_ctrl_port }
        - port: { get_resource: svspb_srvc_port }
      user_data_format: RAW
      user_data: |
        #cloud-config
        system_info:
          default_user:
            name: "sandvine"
        chpasswd:
          list: |
            root:sandvine
            sandvine:sandvine
          expire: False

  svsde_1:
    type: OS::Nova::Server
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svsde-1' } }
      key_name: { get_param: 'ssh_key' }
      image: { get_param: 'svsde_image' }
      flavor: "m1.medium"
      networks:
        - port: { get_resource: svsde_ctrl_port }
        - port: { get_resource: svsde_srvc_port }
      user_data_format: RAW
      user_data: |
        #cloud-config
        system_info:
          default_user:
            name: "sandvine"
        chpasswd:
          list: |
            root:sandvine
            sandvine:sandvine
          expire: False

outputs:
