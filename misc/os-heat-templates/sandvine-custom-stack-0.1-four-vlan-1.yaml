heat_template_version: 2013-05-23

description: >

  HOT template to create a customized Sandvine Stack, it have two Instances acting as a L2 Bridge between two networks.

  We have 4 Instances:

  * 2 PTS - CentOS 7
  * 1 SDE - CentOS 6
  * 1 SPB - CentOS 6


  We want to wire them as:

  -------|ctrl_subnet|------------- Control Network (with Internet access via router_i0)
      |        |        |
     ---      ---      ---
     | |      | |      | | 
     | |      | |      |P|----- Traffic Generator - Side A
     | |      | |      |T|
     | |      | |      |S|
     |S|      |S|      | |
     |B|      |D|      |1|
     |P|      |E|      | |
     | |      | |      ---
     | |      | |       |
     | |      | |       | <-- Fake Internet connection between PTS 1 and 2
     | |      | |       |
     | |      | |      ---
     | |      | |      | |
     | |      | |      |P|
     | |      | |      |T|
     | |      | |      |S|
     | |      | |      | |
     | |      | |      |2|----- Traffic Generator - Side B
     | |      | |      | |
     ---      ---      - -
      |        |        |
      --|service_subnet|------  <-- Service Network (not routed - no gateway)

parameters:
  # SSH Keypair
  ssh_key:
    type: string
    label: "Your SSH keypair name (pre-create please!)"
    description: |
        If you have not created your key, please go to
        Project/Compute/Access & Security, and either import
        one or create one. If you create it, make sure you keep
        the downloaded file (as you don't get a second chance)
    default: default

  # Valid IP Network on the Internet
  public_network:
    type: string
    label: Public External Network
    description: Public Network with Floating IP addresses
    default: "ext-net"

  # Stack Images
  pts_image:
    type: string
    label: "PTS Image (default '{{pts_image}}')"
    description: "PTS Image"
    default: "{{pts_image}}"

  sde_image:
    type: string
    label: "SDE Image (default '{{sde_image}}')"
    description: "SDE Image"
    default: "{{sde_image}}"

  spb_image:
    type: string
    label: "SPB Image (default '{{spb_image}}')"
    description: "SPB Image"
    default: "{{spb_image}}"

resources:
  # Neutron Routers
  rtr_0:
    type: OS::Neutron::Router
    properties:
      admin_state_up: True
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-rtr-0' } }
      external_gateway_info:
        network: { get_param: public_network }

  # Router's ports
  router_i0:
    type: OS::Neutron::RouterInterface
    properties:
      router: { get_resource: rtr_0 }
      subnet: { get_resource: ctrl_subnet }

  # Floating IP of each Virtual Machine / Instances
  floating_ip_1:
    type: OS::Neutron::FloatingIP
    depends_on: router_i0
    properties:
      floating_network: { get_param: public_network }

  floating_ip_2:
    type: OS::Neutron::FloatingIP
    depends_on: router_i0
    properties:
      floating_network: { get_param: public_network }

  floating_ip_3:
    type: OS::Neutron::FloatingIP
    depends_on: router_i0
    properties:
      floating_network: { get_param: public_network }

  floating_ip_4:
    type: OS::Neutron::FloatingIP
    depends_on: router_i0
    properties:
      floating_network: { get_param: public_network }

  # Security Groups / OpenStack's Firewall Layer
  subscriber_default_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-subscriber-default-sec' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - protocol: tcp
          port_range_min: 443
          port_range_max: 443
        - protocol: tcp
          port_range_min: 3389
          port_range_max: 3389

  sde_ctrl_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-sde-ctrl-rules' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - protocol: tcp
          port_range_min: 443
          port_range_max: 443

  sde_srvc_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-sde-srvc-rules' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 1
          port_range_max: 65535
        - protocol: udp
          port_range_min: 1
          port_range_max: 65535

  spb_ctrl_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-spb-ctrl-rules' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22

  spb_srvc_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-spb-srvc-rules' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 1
          port_range_max: 65535
        - protocol: udp
          port_range_min: 1
          port_range_max: 65535

  pts_ctrl_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-pts-ctrl-rules' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22

  pts_srvc_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-pts-srvc-rules' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 1
          port_range_max: 65535
        - protocol: udp
          port_range_min: 1
          port_range_max: 65535

  # Control Network
  ctrl_net:
    type: OS::Neutron::Net
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-control' } }

  # Control Subnet
  ctrl_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-control' } }
      dns_nameservers: [8.8.4.4, 8.8.8.8]
      network: { get_resource: ctrl_net }
      enable_dhcp: True
      cidr: 192.168.192.0/25
      allocation_pools:
        - start: 192.168.192.50
          end: 192.168.192.126

  # Service Network
  service_net:
    type: OS::Neutron::Net
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-service' } }

  # Service Subnet
  service_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-service' } }
      dns_nameservers: [8.8.4.4, 8.8.8.8]
      network: { get_resource: service_net }
      enable_dhcp: True
      cidr: 192.168.192.128/25
      gateway_ip: ""

  # Subscribers Network 1
  data_sub_net1:
    type: OS::Neutron::ProviderNet
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-subscribers-1-vlan-{{vlan_sub_id}}' } }
      network_type: vlan
      physical_network: physvlanp3p3
      segmentation_id: {{vlan_sub_id}}
      shared: false

  # Subscribers Subnet 1, can be ignored - not used
  data_sub_subnet1:
    type: OS::Neutron::Subnet
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-subscribers-1' } }
      dns_nameservers: [8.8.4.4, 8.8.8.8]
      network: { get_resource: data_sub_net1 }
      enable_dhcp: True
      cidr: 10.192.0.0/16
      gateway_ip: 10.192.0.1
      allocation_pools:
        - start: 10.192.0.50
          end: 10.192.255.254

  # Subscribers Network 2
  data_sub_net2:
    type: OS::Neutron::ProviderNet
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-subscribers-2-vlan-{{vlan_sub2_id}}' } }
      network_type: vlan
      physical_network: physvlanp3p4
      segmentation_id: {{vlan_sub2_id}}
      shared: false

  # Subscribers Subnet 2, can be ignored - not used
  data_sub_subnet2:
    type: OS::Neutron::Subnet
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-subscribers-2' } }
      network: { get_resource: data_sub_net2 }
      enable_dhcp: False
      cidr: 10.192.0.0/16
      allocation_pools:
        - start: 10.192.0.2
          end: 10.192.0.29

  # "Internet" Network between two PTS
  data_int_middle_net1:
    type: OS::Neutron::ProviderNet
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-data-internet-middle-1-vlan-{{vlan_middle_id}}' } }
      network_type: vlan
      physical_network: physvlanfake
      segmentation_id: {{vlan_middle_id}}
      shared: false

  # "Internet" Subnet, can be ignored - not used
  data_int_middle_subnet1:
    type: OS::Neutron::Subnet
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-data-internet-middle-1' } }
      network: { get_resource: data_int_middle_net1 }
      enable_dhcp: False
      cidr: 10.192.0.0/16
      allocation_pools:
        - start: 10.192.0.30
          end: 10.192.0.49

  # SPB's Control Port at the internal switch
  spb_ctrl_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "spb-port"]]}
      network: { get_resource: ctrl_net }
      fixed_ips:
        - ip_address: 192.168.192.10
      security_groups:
        - { get_resource: spb_ctrl_sec }

  # SPB's Control Port Floating IP at the public Switch
  spb_floating_ip_assoc:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip_3 }
      port_id: { get_resource: spb_ctrl_port }

  # SDE's Control Port at the internal switch
  sde_ctrl_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "sde-port"]]}
      network: { get_resource: ctrl_net }
      fixed_ips:
        - ip_address: 192.168.192.20
      security_groups:
        - { get_resource: sde_ctrl_sec }

  # SDE's Control Port Floating IP at the public Switch
  sde_floating_ip_assoc:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip_2 }
      port_id: { get_resource: sde_ctrl_port }

  # PTS 1's Control Port at the internal switch
  pts_ctrl_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "pts-port"]]}
      network: { get_resource: ctrl_net }
      fixed_ips:
        - ip_address: 192.168.192.30
      security_groups:
        - { get_resource: pts_ctrl_sec }

  # PTS 1's Control Port Floating IP at the public Switch
  pts_floating_ip_assoc:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip_1 }
      port_id: { get_resource: pts_ctrl_port }

  # PTS 2's Control Port at the internal switch
  pts2_ctrl_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "pts2-ctrl-port"]]}
      network: { get_resource: ctrl_net }
      fixed_ips:
        - ip_address: 192.168.192.31
      security_groups:
        - { get_resource: pts_ctrl_sec }

  # PTS 2's Control Port Floating IP at the public Switch
  pts2_floating_ip_assoc:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip_4 }
      port_id: { get_resource: pts2_ctrl_port }

  # Services Ports
  spb_srvc_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "spb-port"]]}
      network: { get_resource: service_net }
      fixed_ips:
        - ip_address: 192.168.192.130

  sde_srvc_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "sde-port"]]}
      network: { get_resource: service_net }
      fixed_ips:
       - ip_address: 192.168.192.140
 
  pts_srvc_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "pts-port"]]}
      network: { get_resource: service_net }
      fixed_ips:
        - ip_address: 192.168.192.150

  pts2_srvc_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "pts2-port"]]}
      network: { get_resource: service_net }
      fixed_ips:
        - ip_address: 192.168.192.151

  # PTS 1 "cables" for both Subscriber and Internet are wired on these ports:
  pts_port_int_middle_net1:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "pts1-i1-port"]]}
      network: { get_resource: data_int_middle_net1 }
      port_security_enabled: False

  # PTS 1 Subscribers 1, wired against physvlanp3p3
  pts_port_sub_side1_net1:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "pts1-s1-port"]]}
      network: { get_resource: data_sub_net1 }
      port_security_enabled: False

  # PTS 2 "cables" for both Subscriber and Internet are wired on these ports:
  pts2_port_int_middle_net1:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "pts2-i1-port"]]}
      network: { get_resource: data_int_middle_net1 }
      port_security_enabled: False

  # PTS 2 Subscribers 2, wired against physvlanp3p4
  pts2_port_sub_side2_net1:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "pts2-s2-port"]]}
      network: { get_resource: data_sub_net2 }
      port_security_enabled: False

  # PTS 1
  pts:
    type: OS::Nova::Server
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-pts' } }
      key_name: { get_param: 'ssh_key' }
      image: { get_param: 'pts_image' }
      flavor: "m1.small"
      networks:
        - port: { get_resource: pts_ctrl_port }
        - port: { get_resource: pts_srvc_port }
        - port: { get_resource: pts_port_sub_side1_net1 }
        - port: { get_resource: pts_port_int_middle_net1 }
      user_data_format: RAW
      user_data: |
        #cloud-config
        system_info:
          default_user:
            name: "sandvine"
        chpasswd:
          list: |
            root:sandvine
            sandvine:sandvine
          expire: False

  # PTS 2
  pts2:
    type: OS::Nova::Server
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-pts2' } }
      key_name: { get_param: 'ssh_key' }
      image: { get_param: 'pts_image' }
      flavor: "m1.small"
      networks:
        - port: { get_resource: pts2_ctrl_port }
        - port: { get_resource: pts2_srvc_port }
        - port: { get_resource: pts2_port_sub_side2_net1 }
        - port: { get_resource: pts2_port_int_middle_net1 }
      user_data_format: RAW
      user_data: |
        #cloud-config
        system_info:
          default_user:
            name: "sandvine"
        chpasswd:
          list: |
            root:sandvine
            sandvine:sandvine
          expire: False

  # SPB 1
  spb:
    type: OS::Nova::Server
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-spb' } }
      key_name: { get_param: 'ssh_key' }
      image: { get_param: 'spb_image' }
      flavor: "m1.medium"
      networks:
        - port: { get_resource: spb_ctrl_port }
        - port: { get_resource: spb_srvc_port }
      user_data_format: RAW
      user_data: |
        #cloud-config
        system_info:
          default_user:
            name: "sandvine"
        chpasswd:
          list: |
            root:sandvine
            sandvine:sandvine
          expire: False

  # SDE 1
  sde:
    type: OS::Nova::Server
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-sde' } }
      key_name: { get_param: 'ssh_key' }
      image: { get_param: 'sde_image' }
      flavor: "m1.medium"
      networks:
        - port: { get_resource: sde_ctrl_port }
        - port: { get_resource: sde_srvc_port }
      user_data_format: RAW
      user_data: |
        #cloud-config
        system_info:
          default_user:
            name: "sandvine"
        chpasswd:
          list: |
            root:sandvine
            sandvine:sandvine
          expire: False

# Stack output
outputs:
  pts_floating_ip:
    description: The IP address of the deployed PTS 1 instance
    value: { get_attr: [floating_ip_1, floating_ip_address] }

  pts2_floating_ip:
    description: The IP address of the deployed PTS 2 instance
    value: { get_attr: [floating_ip_4, floating_ip_address] }

  sde_floating_ip:
    description: The IP address of the deployed SDE instance
    value: { get_attr: [floating_ip_2, floating_ip_address] }

  spb_floating_ip:
    description: The IP address of the deployed SPB instance
    value: { get_attr: [floating_ip_3, floating_ip_address] }
