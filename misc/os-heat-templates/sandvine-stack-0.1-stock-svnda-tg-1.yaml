heat_template_version: 2013-05-23

description: >

  HOT template to create Sandvine Stack, it have an Instance acting as a L2 Bridge between two VXLAN networks.

  We have 5 Instances:

  * SVPTS - CentOS 7
  * SVSDE - CentOS 7
  * SVSPB - CentOS 6
  * SVNDA - CentOS 7
  * Traffic Generator - Ubuntu 16.04

  We want to wire them as:

    -----|ctrl_subnet|------------- Control Network (with Internet access via router_i0)
    |       |        |        |                                |
   ---     ---      ---      ---                               |
   | |     | |      | |      | |                               |
   | |     | |      | |      | |    -------------------        |
   | |     | |      | |      | |----|data_real_subnet1|        |
   |S|     |S|      |S|      |S|    -------------------        |
   |V|     |V|      |V|      |V|            |                  |
   |N|     |S|      |S|      |P|        -----------            |
   |D|     |P|      |D|      |T|        |Ubuntu TG|-------------
   |A|     |B|      |E|      |S|        -----------
   | |     | |      | |      | |            |
   | |     | |      | |      | |    ------------------
   | |     | |      | |      | |----|data_int_subnet1|
   | |     | |      | |      | |    ------------------
   ---     ---      ---      - -
    |       |        |        |
    ----|service_subnet|------  <-- Service Network (not routed - no gateway)

parameters:
  ssh_key:
    type: string
    label: "Your SSH keypair name (pre-create please!)"
    description: |
        If you have not created your key, please go to
        Project/Compute/Access & Security, and either import
        one or create one. If you create it, make sure you keep
        the downloaded file (as you don't get a second chance)
    default: default

  public_network:
    type: string
    label: Public External Network
    description: Public Network with Floating IP addresses
    default: "ext-net"

  svpts_image:
    type: string
    label: "SVPTS Image (default '{{svpts_image}}')"
    description: "SVPTS Image"
    default: "{{svpts_image}}"

  svsde_image:
    type: string
    label: "SVSDE Image (default '{{svsde_image}}')"
    description: "SVSDE Image"
    default: "{{svsde_image}}"

  svspb_image:
    type: string
    label: "SVSPB Image (default '{{svspb_image}}')"
    description: "SVSPB Image"
    default: "{{svspb_image}}"

  svnda_image:
    type: string
    label: "SVNDA Image (default '{{svnda_image}}')"
    description: "SVNDA Image"
    default: "{{svnda_image}}"

  tg_image:
    type: string
    label: "Traffic Generator Instance"
    description: "Regular Server as a Traffic Generator"
    default: "{{tg_image}}"

resources:
  rtr:
    type: OS::Neutron::Router
    properties:
      admin_state_up: True
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-rtr' } }
      external_gateway_info:
        network: { get_param: public_network }

  router_i0:
    type: OS::Neutron::RouterInterface
    properties:
      router: { get_resource: rtr }
      subnet: { get_resource: ctrl_subnet }

  floating_ip_1:
    type: OS::Neutron::FloatingIP
    depends_on: router_i0
    properties:
      floating_network: { get_param: public_network }

  floating_ip_2:
    type: OS::Neutron::FloatingIP
    depends_on: router_i0
    properties:
      floating_network: { get_param: public_network }

  floating_ip_3:
    type: OS::Neutron::FloatingIP
    depends_on: router_i0
    properties:
      floating_network: { get_param: public_network }

  floating_ip_4:
    type: OS::Neutron::FloatingIP
    depends_on: router_i0
    properties:
      floating_network: { get_param: public_network }

  floating_ip_5:
    type: OS::Neutron::FloatingIP
    depends_on: router_i0
    properties:
      floating_network: { get_param: public_network }

  tg_default_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-tg-default-sec' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - protocol: tcp
          port_range_min: 443
          port_range_max: 443
        - protocol: tcp
          port_range_min: 3389
          port_range_max: 3389

  svsde_ctrl_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svsde-ctrl-rules' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - protocol: tcp
          port_range_min: 443
          port_range_max: 443

  svsde_srvc_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svsde-srvc-rules' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 1
          port_range_max: 65535
        - protocol: udp
          port_range_min: 1
          port_range_max: 65535

  svspb_ctrl_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svspb-ctrl-rules' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22

  svspb_srvc_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svspb-srvc-rules' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 1
          port_range_max: 65535
        - protocol: udp
          port_range_min: 1
          port_range_max: 65535

  svnda_ctrl_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svnda-ctrl-rules' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22

  svnda_srvc_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svnda-srvc-rules' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 1
          port_range_max: 65535
        - protocol: udp
          port_range_min: 1
          port_range_max: 65535

  svpts_ctrl_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svpts-ctrl-rules' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22

  svpts_srvc_sec:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svpts-srvc-rules' } }
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 1
          port_range_max: 65535
        - protocol: udp
          port_range_min: 1
          port_range_max: 65535

  ctrl_net:
    type: OS::Neutron::Net
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-control' } }

  ctrl_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-control' } }
      dns_nameservers: [10.128.0.25, 10.128.0.26]
      network: { get_resource: ctrl_net }
      enable_dhcp: True
      cidr: 192.168.192.0/25
      allocation_pools:
        - start: 192.168.192.50
          end: 192.168.192.126

  service_net:
    type: OS::Neutron::Net
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-service' } }

  service_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-service' } }
      dns_nameservers: [10.128.0.25, 10.128.0.26]
      network: { get_resource: service_net }
      enable_dhcp: True
      cidr: 192.168.192.128/25
      gateway_ip: ""

  data_sub_net1:
    type: OS::Neutron::Net
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-subscribers-ns1' } }

  data_real_subnet1:
    type: OS::Neutron::Subnet
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-subscribers-ss1' } }
      dns_nameservers: [10.128.0.25, 10.128.0.26]
      network: { get_resource: data_sub_net1 }
      enable_dhcp: False
      cidr: 10.192.0.0/16
      gateway_ip: 10.192.0.1
      allocation_pools:
        - start: 10.192.0.50
          end: 10.192.255.254

  data_int_net1:
    type: OS::Neutron::Net
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-subscribers-ni1' } }

  data_int_subnet1:
    type: OS::Neutron::Subnet
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-subscribers-si1' } }
      network: { get_resource: data_int_net1 }
      enable_dhcp: False
      cidr: 10.192.0.0/16
      allocation_pools:
        - start: 10.192.0.2
          end: 10.192.0.49

  svspb_ctrl_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svspb-port"]]}
      network: { get_resource: ctrl_net }
      fixed_ips:
        - ip_address: 192.168.192.10
      security_groups:
        - { get_resource: svspb_ctrl_sec }

  svspb_floating_ip_assoc:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip_3 }
      port_id: { get_resource: svspb_ctrl_port }

  svsde_ctrl_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svsde-port"]]}
      network: { get_resource: ctrl_net }
      fixed_ips:
        - ip_address: 192.168.192.20
      security_groups:
        - { get_resource: svsde_ctrl_sec }

  svsde_floating_ip_assoc:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip_2 }
      port_id: { get_resource: svsde_ctrl_port }

  svnda_ctrl_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svnda-port"]]}
      network: { get_resource: ctrl_net }
      fixed_ips:
        - ip_address: 192.168.192.11
      security_groups:
        - { get_resource: svnda_ctrl_sec }

  svnda_floating_ip_assoc:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip_5 }
      port_id: { get_resource: svnda_ctrl_port }

  svpts_ctrl_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svpts-port"]]}
      network: { get_resource: ctrl_net }
      fixed_ips:
        - ip_address: 192.168.192.30
      security_groups:
        - { get_resource: svpts_ctrl_sec }

  svpts_floating_ip_assoc:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip_1 }
      port_id: { get_resource: svpts_ctrl_port }

  svspb_srvc_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svspb-port"]]}
      network: { get_resource: service_net }
      fixed_ips:
        - ip_address: 192.168.192.130

  svsde_srvc_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svsde-port"]]}
      network: { get_resource: service_net }
      fixed_ips:
       - ip_address: 192.168.192.140
 
  svnda_srvc_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svnda-port"]]}
      network: { get_resource: service_net }
      fixed_ips:
       - ip_address: 192.168.192.141

  svpts_srvc_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svpts-port"]]}
      network: { get_resource: service_net }
      fixed_ips:
        - ip_address: 192.168.192.150

  svpts_port_int_net1:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svpts-i1-port"]]}
      network: { get_resource: data_int_net1 }
      port_security_enabled: False

  svpts_port_sub_net1:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svpts-s1-port"]]}
      network: { get_resource: data_sub_net1 }
      port_security_enabled: False

  tg_ctrl_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svpts-port"]]}
      network: { get_resource: ctrl_net }
      fixed_ips:
        - ip_address: 192.168.192.35
      security_groups:
        - { get_resource: tg_default_sec }

  tg_floating_ip_assoc:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip_4 }
      port_id: { get_resource: tg_ctrl_port }

  tg_sub_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "tg_server-s1-port"]]}
      network: { get_resource: data_sub_net1 }
      port_security_enabled: False

  tg_int_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "tg_server-i1-port"]]}
      network: { get_resource: data_int_net1 }
      port_security_enabled: False

  svpts_1:
    type: OS::Nova::Server
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svpts-1' } }
      key_name: { get_param: 'ssh_key' }
      image: { get_param: 'svpts_image' }
      flavor: "m1.small"
      networks:
        - port: { get_resource: svpts_ctrl_port }
        - port: { get_resource: svpts_srvc_port }
        - port: { get_resource: svpts_port_sub_net1 }
        - port: { get_resource: svpts_port_int_net1 }
      user_data_format: RAW
      user_data: |
        #cloud-config
        system_info:
          default_user:
            name: "sandvine"
        chpasswd:
          list: |
            root:sandvine
            sandvine:sandvine
          expire: False

  svspb_1:
    type: OS::Nova::Server
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svspb-1' } }
      key_name: { get_param: 'ssh_key' }
      image: { get_param: 'svspb_image' }
      flavor: "m1.medium"
      networks:
        - port: { get_resource: svspb_ctrl_port }
        - port: { get_resource: svspb_srvc_port }
      user_data_format: RAW
      user_data: |
        #cloud-config
        system_info:
          default_user:
            name: "sandvine"
        chpasswd:
          list: |
            root:sandvine
            sandvine:sandvine
          expire: False

  svsde_1:
    type: OS::Nova::Server
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svsde-1' } }
      key_name: { get_param: 'ssh_key' }
      image: { get_param: 'svsde_image' }
      flavor: "m1.medium"
      networks:
        - port: { get_resource: svsde_ctrl_port }
        - port: { get_resource: svsde_srvc_port }
      user_data_format: RAW
      user_data: |
        #cloud-config
        system_info:
          default_user:
            name: "sandvine"
        chpasswd:
          list: |
            root:sandvine
            sandvine:sandvine
          expire: False

  svnda_1:
    type: OS::Nova::Server
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svnda-1' } }
      key_name: { get_param: 'ssh_key' }
      image: { get_param: 'svnda_image' }
      flavor: "m1.medium"
      networks:
        - port: { get_resource: svnda_ctrl_port }
        - port: { get_resource: svnda_srvc_port }
      user_data_format: RAW
      user_data: |
        #cloud-config
        system_info:
          default_user:
            name: "sandvine"
        chpasswd:
          list: |
            root:sandvine
            sandvine:sandvine
          expire: False

  tg_1:
    type: OS::Nova::Server
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-tg-1' } }
      key_name: { get_param: 'ssh_key' }
      image: { get_param: 'tg_image' }
      flavor: "m1.little"
      networks:
        - port: { get_resource: tg_ctrl_port }
        - port: { get_resource: tg_sub_port }
        - port: { get_resource: tg_int_port }
      user_data_format: RAW
      user_data: |
        #cloud-config
        system_info:
          default_user:
            name: "sandvine"
        chpasswd:
          list: |
            root:sandvine
            sandvine:sandvine
          expire: False
        runcmd:
        - ifdown ens4
        - ifdown ens5
        - 'su -c "\curl -s https://raw.githubusercontent.com/sandvine-eng/svauto/dev/scripts/svauto-deployments.sh | bash -s -- --base-os=ubuntu16 --ansible-roles=bootstrap,grub-conf,post-cleanup --ansible-extra-vars=base_os_upgrade=yes,ubuntu_install=server,ubuntu_primary_interface=ens3,ubuntu_network_setup=yes" sandvine'
        - rm -f /etc/network/interfaces.d/50-cloud-init.cfg

outputs:
