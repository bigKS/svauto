heat_template_version: 2013-05-23

description: >

  HOT template to create Sandvine Stack, it have an Instance acting as a L2 Load Balancer, the SVTSE.

  We have 6 Instances:

  * SVPTS - CentOS 7
  * SVTSE - CentOS 7
  * SVSDE - CentOS 7
  * SVSPB - CentOS 6
  * SVTCPA - CentOS 7
  * Subscriber - Ubuntu 16.04


  We want to wire them as:

      -------|ctrl_subnet|------------------- Control Network (with Internet access via router_i0)
      |     |         |    |    |           |
     ---   ---       ---  ---  ---         ---
     | |   | |       |S|  |S|  |S|         | |
     | |   | |       |V|  |V|  |V|         | |      --|Ubuntu as a Subscriber|
     | |   | |       |P|  |P|  |T|         | |      |
     |S|   |S|       |T|  |T|  |C|         |S|    --------------------------
     |V|   |V|       |S|  |S|  |P|         |V|----|data_real_subnet1 + dhcp|
     |S|   |S|  -----| |--| |--| |         |T|    --------------------------
     |P|   |D|  |    |1|  |2|  |A|         |S|
     |B|   |E|  |    ---  ---  ---         |E|
     | |   | |  |     |    |    |          | |
     | |   | |  |     |    |    |          | |
     | |   | |  |    |data_chain_subnet1|--| |
     | |   | |  |                          | |------------|data_int_subnet1|----|Internet via router_i1|
     ---   ---  |                          - -
      |     |   |                           |
      --------------|service_subnet|---------  <-- Service Network (not routed - no gateway)

parameters:

  # Your SSH Keypair must be called "default"
  ssh_key:
    type: string
    label: "Your SSH keypair name (pre-create please!)"
    description: |
        If you have not created your key, please go to
        Project/Compute/Access & Security, and either import
        one or create one. If you create it, make sure you keep
        the downloaded file (as you don't get a second chance)
    default: default

  # Public / External network
  public_network:
    type: string
    label: Public External Network
    description: Public Network with Floating IP addresses
    default: "ext-net"

  # Image definitions
  svpts_image:
    type: string
    label: "SVPTS Image (default '{{svpts_image}}')"
    description: "SVPTS Image"
    default: "{{svpts_image}}"

  svsde_image:
    type: string
    label: "SVSDE Image (default '{{svsde_image}}')"
    description: "SVSDE Image"
    default: "{{svsde_image}}"

  svspb_image:
    type: string
    label: "SVSPB Image (default '{{svspb_image}}')"
    description: "SVSPB Image"
    default: "{{svspb_image}}"

  svtse_image:
    type: string
    label: "SVTSE Image (default '{{svtse_image}}')"
    description: "SVTSE Image"
    default: "{{svtse_image}}"

  svtcpa_image:
    type: string
    label: "TCP Accelerator Image (default '{{svtcpa_image}}')"
    description: "TCP Accelerator Image"
    default: "{{svtcpa_image}}"

  subscriber_image:
    type: string
    label: "Subscriber Image (default '{{subscriber_image}}')"
    description: "Subscriber Image"
    default: "{{subscriber_image}}"

resources:

  # Routers and its Interfaces
  rtr:
    type: OS::Neutron::Router
    properties:
      admin_state_up: True
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-rtr' } }
      external_gateway_info:
        network: { get_param: public_network }

  router_i0:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: rtr }
      subnet_id: { get_resource: ctrl_subnet }

  router_i1:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: rtr }
      subnet_id: { get_resource: data_int_subnet1 }

  # Control Network
  ctrl_net:
    type: OS::Neutron::Net
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-control' } }

  ctrl_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-control' } }
      dns_nameservers: [8.8.4.4, 8.8.8.8]
      network: { get_resource: ctrl_net }
      enable_dhcp: True
      cidr: 192.168.192.0/25
      allocation_pools:
        - start: 192.168.192.50
          end: 192.168.192.126

  # Service Network
  service_net:
    type: OS::Neutron::Net
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-service' } }

  service_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-service' } }
      network: { get_resource: service_net }
      enable_dhcp: True
      cidr: 192.168.192.128/25
      gateway_ip: ""

  # Data Networks and Subnets
  data_sub_net1:
    type: OS::Neutron::Net
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-subscribers-ns1' } }

  data_real_subnet1:
    type: OS::Neutron::Subnet
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-subscribers-ss1' } }
      dns_nameservers: [8.8.4.4, 8.8.8.8]
      network: { get_resource: data_sub_net1 }
      enable_dhcp: True
      cidr: 10.192.0.0/16
      gateway_ip: 10.192.0.1
      allocation_pools:
        - start: 10.192.0.50
          end: 10.192.255.254

  data_int_net1:
    type: OS::Neutron::Net
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-subscribers-ni1' } }

  data_int_subnet1:
    type: OS::Neutron::Subnet
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-subscribers-si1' } }
      network: { get_resource: data_int_net1 }
      enable_dhcp: True
      cidr: 10.192.0.0/16
      allocation_pools:
        - start: 10.192.0.2
          end: 10.192.0.49

  data_chain_net1:
    type: OS::Neutron::Net
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-chain-net1' } }

  data_chain_subnet1:
    type: OS::Neutron::Subnet
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-chain-subnet1' } }
      network: { get_resource: data_chain_net1 }
      enable_dhcp: False
      cidr: 10.193.0.0/16

  #
  # Control Ports (with each Floating IP)
  #

  svpts_ctrl_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svpts-ctrl-port"]]}
      network: { get_resource: ctrl_net }
      fixed_ips:
        - ip_address: 192.168.192.30

  svsde_ctrl_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svsde-ctrl-port"]]}
      network: { get_resource: ctrl_net }
      fixed_ips:
        - ip_address: 192.168.192.20

  svspb_ctrl_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svspb-ctrl-port"]]}
      network: { get_resource: ctrl_net }
      fixed_ips:
        - ip_address: 192.168.192.10

  svtse_ctrl_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svtse-ctrl-port"]]}
      network: { get_resource: ctrl_net }
      fixed_ips:
        - ip_address: 192.168.192.31

  svtcpa_ctrl_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svtcpa-ctrl-port"]]}
      network: { get_resource: ctrl_net }
      fixed_ips:
        - ip_address: 192.168.192.32

  # Services Ports
  svspb_srvc_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svspb-srvc-port"]]}
      network: { get_resource: service_net }
      fixed_ips:
        - ip_address: 192.168.192.130

  svsde_srvc_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svsde-srvc-port"]]}
      network: { get_resource: service_net }
      fixed_ips:
       - ip_address: 192.168.192.140
 
  svpts_srvc_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svpts-srvc-port"]]}
      network: { get_resource: service_net }
      fixed_ips:
        - ip_address: 192.168.192.150

  svtse_srvc_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svtse-srvc-port"]]}
      network: { get_resource: service_net }
      fixed_ips:
        - ip_address: 192.168.192.151

  svtcpa_srvc_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svtcpa-srvc-port"]]}
      network: { get_resource: service_net }
      fixed_ips:
        - ip_address: 192.168.192.152

  sub_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svspb-srvc-port"]]}
      network: { get_resource: data_sub_net1 }

  # Chain Network Data Ports
  svpts_chain_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svpts-chain-port"]]}
      network: { get_resource: data_chain_net1 }

  svtse_chain_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svtse-chain-port"]]}
      network: { get_resource: data_chain_net1 }

  svtcpa_chain_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svtcpa-chain-port"]]}
      network: { get_resource: data_chain_net1 }

  # SVTSE Data Ports (Subscriber and Internet
  svtse_sub_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svtse-s1-port"]]}
      network: { get_resource: data_sub_net1 }

  svtse_int_port:
    type: OS::Neutron::Port
    properties:
      name: {"Fn::Join": ["-", [{ get_param: "OS::stack_name" } , "svtse-i1-port"]]}
      network: { get_resource: data_int_net1 }

  #
  # Instances Declaration
  #

  # Traffic Steering Engine
  svtse_instance_1:
    type: OS::Nova::Server
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svtse-1' } }
      key_name: { get_param: 'ssh_key' }
      image: { get_param: 'svtse_image' }
      flavor: "m1.medium"
      networks:
        - port: { get_resource: svtse_ctrl_port }
        - port: { get_resource: svtse_srvc_port }
        - port: { get_resource: svtse_chain_port }
        - port: { get_resource: svtse_sub_port }
        - port: { get_resource: svtse_int_port }
      user_data_format: RAW
      user_data: |
        #cloud-config
        system_info:
          default_user:
            name: "sandvine"
        chpasswd:
          list: |
            root:sandvine
            sandvine:sandvine
          expire: False

  # SVPTS Instance
  svpts_instance_1:
    type: OS::Nova::Server
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svpts-1' } }
      key_name: { get_param: 'ssh_key' }
      image: { get_param: 'svpts_image' }
      flavor: "m1.small"
      networks:
        - port: { get_resource: svpts_ctrl_port }
        - port: { get_resource: svpts_srvc_port }
        - port: { get_resource: svpts_chain_port }
      user_data_format: RAW
      user_data: |
        #cloud-config
        system_info:
          default_user:
            name: "sandvine"
        chpasswd:
          list: |
            root:sandvine
            sandvine:sandvine
          expire: False

  # TCP Accelerator
  svtcpa_instance_1:
    type: OS::Nova::Server
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svtcpa-1' } }
      key_name: { get_param: 'ssh_key' }
      image: { get_param: 'svtcpa_image' }
      flavor: "m1.medium"
      networks:
        - port: { get_resource: svtcpa_ctrl_port }
        - port: { get_resource: svtcpa_srvc_port }
        - port: { get_resource: svtcpa_chain_port }
      user_data_format: RAW
      user_data: |
        #cloud-config
        system_info:
          default_user:
            name: "sandvine"
        chpasswd:
          list: |
            root:sandvine
            sandvine:sandvine
          expire: False

  # SVSPB Instance
  svspb_instance_1:
    type: OS::Nova::Server
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svspb-1' } }
      key_name: { get_param: 'ssh_key' }
      image: { get_param: 'svspb_image' }
      flavor: "m1.medium"
      networks:
        - port: { get_resource: svspb_ctrl_port }
        - port: { get_resource: svspb_srvc_port }
      user_data_format: RAW
      user_data: |
        #cloud-config
        system_info:
          default_user:
            name: "sandvine"
        chpasswd:
          list: |
            root:sandvine
            sandvine:sandvine
          expire: False

  # SVSDE Instance
  svsde_instance_1:
    type: OS::Nova::Server
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-svsde-1' } }
      key_name: { get_param: 'ssh_key' }
      image: { get_param: 'svsde_image' }
      flavor: "m1.medium"
      networks:
        - port: { get_resource: svsde_ctrl_port }
        - port: { get_resource: svsde_srvc_port }
      user_data_format: RAW
      user_data: |
        #cloud-config
        system_info:
          default_user:
            name: "sandvine"
        chpasswd:
          list: |
            root:sandvine
            sandvine:sandvine
          expire: False

  # Subscriber Instance 1
  subscriber_instance_1:
    type: OS::Nova::Server
    properties:
      name: { str_replace: { params: { $stack_name: { get_param: 'OS::stack_name' } }, template: '$stack_name-subscriber-1' } }
      key_name: { get_param: 'ssh_key' }
      image: { get_param: 'subscriber_image' }
      flavor: "m1.small"
      networks:
        - port: { get_resource: sub_port }
      user_data_format: RAW
      user_data: |
        #cloud-config
        system_info:
          default_user:
            name: "sandvine"
        chpasswd:
          list: |
            root:sandvine
            sandvine:sandvine
          expire: False

outputs:
